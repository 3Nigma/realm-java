apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.sdkVersion
    buildToolsVersion rootProject.buildTools

    defaultConfig {
        applicationId "io.realm.objectserver"
        minSdkVersion 9
        targetSdkVersion rootProject.sdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn reverseNodeServerPort, reverseNodeServerPort, reverseAuthServerPort
    }
}

def formatReversePortFailureMessage(port) {
    "============================================================================\n" +
    "WARNING: Failed to automatically reverse port $port.\n" +
    "Please reverse this port from localhost to the device or emulator being used\n" +
    "to run the application.\n" +
    "You may need to add the appropriate flags to the command that failed:\n" +
    "    adb -s DEVICE reverse tcp:port tcp:$port\n" +
    "============================================================================\n"
}

task reverseNodeServerPort(type: Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'reverse', 'tcp:8888', 'tcp:8888'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(formatReversePortFailureMessage(8888))
        }
    }
}

task reverseSyncServerPort(type: Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'reverse', 'tcp:7800', 'tcp:7800'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(formatReversePortFailureMessage(7800))
        }
    }
}

task reverseAuthServerPort(type: Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'reverse', 'tcp:8080', 'tcp:8080'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(formatReversePortFailureMessage(8080))
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}
