apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.sdkVersion
    buildToolsVersion rootProject.buildTools

    defaultConfig {
        applicationId "io.realm.objectserver"
        minSdkVersion 9
        targetSdkVersion rootProject.sdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn startServer
    }
}

task reverseNodeServerPort(type: Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'reverse', 'tcp:8888', 'tcp:8888'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(
                    '===========================================================================\n' +
                            'WARNING: Failed to automatically reverse port 8888.\n' +
                            'Please reverse this port from localhost to the device or emulator being used to run the application.\n' +
                            'You may need to add the appropriate flags to the command that failed:\n' +
                            '    adb -s DEVICE reverse tcp:8888 tcp:8888\n' +
                            '===========================================================================\n'
            )
        }
    }
}

task reverseSyncServerPort(type: Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'reverse', 'tcp:7800', 'tcp:7800'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(
                    '===========================================================================\n' +
                            'WARNING: Failed to automatically reverse port 7800.\n' +
                            'Please reverse this port from localhost to the device or emulator being used to run the application.\n' +
                            'You may need to add the appropriate flags to the command that failed:\n' +
                            '    adb -s DEVICE reverse tcp:7800 tcp:7800\n' +
                            '===========================================================================\n'
            )
        }
    }
}


task startServer(dependsOn :[reverseNodeServerPort, reverseSyncServerPort])  {
    doLast {
        //start new process
        //local def processBuilder = new ProcessBuilder(['/usr/local/bin/node','server.js', 'debug.log'])
        def processBuilder = new ProcessBuilder(['nodejs','server.js', 'debug.log'])
        processBuilder.directory(new File("$projectDir/test_server"))
        processBuilder.start()
        sleep(3000)
//         block until the server is up
//        while (true) {
//            def proc = "lsof -n -i4TCP:8888".execute()
//            try {
//                proc.waitFor()
//            } finally {
//                def exitValue = proc.exitValue()
//                if (exitValue == 0) {
//                    //set pid
////                    def pidField = process.class.getDeclaredField('pid')
////                    pidField.accessible = true
////                    pidFile << pidField.getInt(process)
//                    logger.error(">>>>>>>>>>>> Server is up <<<<<<<<<<<<")
//                    break;
//                } else {
//                    // TODO add sleep to timeout
//                    logger.error(">>>>>>>>>>>> Waiting for server to be up <<<<<<<<<<<<")
//                }
//            }
//        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
}
